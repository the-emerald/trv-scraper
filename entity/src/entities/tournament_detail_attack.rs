//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tournament_detail_attack")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub fighter_id: i64,
    pub round_id: i32,
    pub special_attack: bool,
    pub speical_defend: bool,
    pub damage: i32,
    pub order: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::fighter::Entity",
        from = "Column::FighterId",
        to = "super::fighter::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Fighter,
    #[sea_orm(
        belongs_to = "super::tournament_detail_round::Entity",
        from = "Column::RoundId",
        to = "super::tournament_detail_round::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TournamentDetailRound,
}

impl Related<super::fighter::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Fighter.def()
    }
}

impl Related<super::tournament_detail_round::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TournamentDetailRound.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
